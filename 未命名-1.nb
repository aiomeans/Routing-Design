(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     31521,        669]
NotebookOptionsPosition[     30106,        640]
NotebookOutlinePosition[     30502,        657]
CellTagsIndexPosition[     30459,        654]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "solve(((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j,x))", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"SlopeField", "Slope field", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> "Input"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"(a b)/x + c d - e == {(f g)/(k - x) + h i - j, x}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 FractionBox[
                  TagBox[
                   RowBox[{"a", " ", "b"}], 
                   PolynomialForm[#, TraditionalOrder -> False]& ], "x"], "+", 
                 RowBox[{"c", " ", "d"}], "-", "e"}], "\[LongEqual]", 
               TagBox[
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    FractionBox[
                    TagBox[
                    RowBox[{"f", " ", "g"}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ], 
                    RowBox[{"k", "-", "x"}]], "+", 
                    RowBox[{"h", " ", "i"}], "-", "j"}], ",", "x"}], "}"}], 
                Identity]}], PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "SlopeField", "numsubpods" -> "1", 
     "position" -> "200", "scanner" -> "ODE", "title" -> "Slope field"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            
            GraphicsBox[{}, DisplayFunction -> Identity, AxesStyle -> 
             Directive[
               AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
             DisplayFunction :> Identity, Frame -> True, FrameLabel -> {
               FormBox["x$5486302", TraditionalForm], 
               FormBox["y$5486302", TraditionalForm]}, FrameStyle -> Directive[
               AbsoluteThickness[0.2]], 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLinesStyle -> Automatic, ImageSize -> 250, 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "TransparentPolygonMesh" -> True}, 
             PlotRange -> {{0., 0.}, {0., 0.}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.05], 
                Scaled[0.05]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer points", "input" -> "SlopeField__Fewer points"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More points", "input" -> "SlopeField__More points"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Slope field", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Vector field", "input" -> 
           "SlopeField__Vector field"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Slope field", "input" -> "SlopeField__Slope field"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Direction field", "input" -> 
           "SlopeField__Direction field"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "2", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.1400000000000001", "parsetiming" -> "0.904", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP708911d0a23e1fd0f24i000013de0b28g34aa8da", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "4", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa709011d0a23e1fd0f24i000028fca6ch9965a5476430556393126808734", "version" -> 
    "2.6", "inputstring" -> "solve(((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j,x))"},
    Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2022, 5, 2, 19, 30, 41.50023`9.370625380969935}, "Line" -> 2, 
    "SessionID" -> 24754366499935466594}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "SlopeField", "Slope field", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "solve(((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j,x))"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{281., {31., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[2]:=",ExpressionUUID->"db897091-bc06-4c6b-ace2-ecea64c150ba"],

Cell[BoxData[
 TemplateBox[{
  "WolframAlpha","timeout",
   "\"The call to \\!\\(\\*RowBox[{\\\"WolframAlpha\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"solve(((a*b)/x) +c \
*d-e=((f*g)/(k-x)+h*i-j,x))\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"WolframParse\\\\\\\"\\\"}], \\\"]\\\"}]\\) has exceeded \
\\!\\(\\*RowBox[{\\\"30.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result.\"",2,2,1,24754366499935466594,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8604798078962803`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[2]:=",ExpressionUUID->"2d820556-05e8-4b1c-a68c-\
12de325134f1"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "solve(((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j,x))", {{"SlopeField", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{3.8604797631832924`*^9, 3.8604798474936833`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b7cfc118-5bc0-4203-9190-2e73d67f3113"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "solve[((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j),x]", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "Solve[(a b)/x + c d - e == (f g)/(k - x) + h i - j, x, \
MaxExtraConditions -> Automatic]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Solve[(a b)/x + c d - e == (f g)/(k - x) + h i - j, x, \
MaxExtraConditions -> Automatic]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"solve\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    TagBox[
                    RowBox[{"a", " ", "b"}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ], "x"], 
                    "+", 
                    RowBox[{"c", " ", "d"}], "-", "e"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    TagBox[
                    RowBox[{"f", " ", "g"}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ], 
                    RowBox[{"k", "-", "x"}]], "+", 
                    RowBox[{"h", " ", "i"}], "-", "j"}], Identity]}], 
                    HoldForm], 
                    StyleBox["\" for \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "x"}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, 
   Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, 
   Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, 
   Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, 
   Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, 
   Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, 
   Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, 
   Typeset`pod30$$, Typeset`pod31$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["error", {}, {"\n  ", 
      XMLElement["code", {}, {"1010"}], "\n  ", 
      XMLElement["msg", {}, {"Computation error"}], "\n "}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "2", "datatypes" -> "Solve", "timedout" -> "Solve", 
     "timedoutpods" -> "", "timing" -> "2.648", "parsetiming" -> "0.838", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa46101c55ea19c3a82a78000041d27810d8b5417i6249686130609588165", "id" -> 
     "MSP46111c55ea19c3a82a7800002a83b0a3c85g4ci3", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "7", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa46121c55ea19c3a82a78000061ah1f7ge5gefig76249686130609588165", "version" -> 
     "2.6", "inputstring" -> 
     "solve[((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j),x]"}, {
    "success" -> "false", "error" -> 
     "true", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
     "numpods" -> "0", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
     "", "timing" -> "0.002", "parsetiming" -> "0.", "parsetimedout" -> 
     "false", "recalculate" -> "", "id" -> "", "parseidserver" -> "7", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "7", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2022, 5, 2, 19, 49, 8.9456674`8.704187714403504}, "Line" -> 5, 
    "SessionID" -> 24754366499935466594}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
    17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, 
   Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "Solve[(a b)/x + c d - e == (f g)/(k - x) + h i - j, x, \
MaxExtraConditions -> Automatic]"}, Typeset`open$$ = False, Typeset`newq$$ = 
   "solve[((a*b)/x) +c *d-e=((f*g)/(k-x)+h*i-j),x]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{436., {101., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa46101c55ea19c3a82a78000041d27810d8b5417i6249686130609588165", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[5]:=",ExpressionUUID->"00a36ec5-9449-42b8-874b-6ddc329eef9d"],

Cell[BoxData[
 TemplateBox[{
  "WolframAlpha","timeout",
   "\"The call to \\!\\(\\*RowBox[{\\\"WolframAlpha\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"solve[((a*b)/x) +c \
*d-e=((f*g)/(k-x)+h*i-j),x]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"WolframParse\\\\\\\"\\\"}], \\\"]\\\"}]\\) has exceeded \
\\!\\(\\*RowBox[{\\\"30.`\\\"}]\\) seconds. Increasing the value of the \
TimeConstraint option may improve the result.\"",2,5,5,24754366499935466594,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.860479877670334*^9, 3.860480186526555*^9, 
  3.8604802568755813`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[5]:=",ExpressionUUID->"d5a22bfc-294c-44a0-a55e-\
8dc0156277f1"],

Cell[BoxData[
 TemplateBox[{
  "URLFetch","invhttp",
   "\"A library error occurred. The raw details are: \\\"libcurl error \
(\\!\\(\\*RowBox[{\\\"56\\\"}]\\)): \\!\\(\\*RowBox[{\\\"\\\\\\\"Send \
failure: Connection was reset\\\\\\\"\\\"}]\\)\\\"\"",2,5,6,
   24754366499935466594,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.860479877670334*^9, 3.860480186526555*^9, 
  3.8604809488808403`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[5]:=",ExpressionUUID->"b3e675aa-23e8-4717-92c0-\
96eb7eab6e88"],

Cell[BoxData[
 TemplateBox[{
  "XML`Parser`XMLGetString","string",
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"XML`Parser`XMLGetString[EndOfFile, \
\\\\\\\\\\\\\\\"NormalizeWhitespace\\\\\\\\\\\\\\\" -> \
False]\\\\\\\"\\\"}]\\).\"",2,5,7,24754366499935466594,"Local",
   "XML`Parser`XMLGetString"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.860479877670334*^9, 3.860480186526555*^9, 
  3.8604809489197845`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[5]:=",ExpressionUUID->"cf5cf359-917d-4c36-bae2-\
dc64ffa9be84"],

Cell[BoxData[
 TemplateBox[{
  "Import","fmterr",
   "\"Cannot import data as \\!\\(\\*RowBox[{\\\"\\\\\\\"XML\\\\\\\"\\\"}]\\) \
format.\"",2,5,8,24754366499935466594,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.860479877670334*^9, 3.860480186526555*^9, 
  3.8604809489656143`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[5]:=",ExpressionUUID->"35a7fa9e-d037-433f-97ec-\
00428add17e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "c"}], " ", "d"}], "+", "e", "+", 
          RowBox[{"h", " ", "i"}], "-", "j"}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", "b"}], "+", 
        RowBox[{"f", " ", "g"}], "-", 
        RowBox[{"c", " ", "d", " ", "k"}], "+", 
        RowBox[{"e", " ", "k"}], "+", 
        RowBox[{"h", " ", "i", " ", "k"}], "-", 
        RowBox[{"j", " ", "k"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "a", " ", "b", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "c"}], " ", "d"}], "+", "e", "+", 
             RowBox[{"h", " ", "i"}], "-", "j"}], ")"}], " ", "k"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "a"}], " ", "b"}], "-", 
             RowBox[{"f", " ", "g"}], "+", 
             RowBox[{"c", " ", "d", " ", "k"}], "-", 
             RowBox[{"e", " ", "k"}], "-", 
             RowBox[{"h", " ", "i", " ", "k"}], "+", 
             RowBox[{"j", " ", "k"}]}], ")"}], "2"]}]]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "c"}], " ", "d"}], "+", "e", "+", 
          RowBox[{"h", " ", "i"}], "-", "j"}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", "b"}], "+", 
        RowBox[{"f", " ", "g"}], "-", 
        RowBox[{"c", " ", "d", " ", "k"}], "+", 
        RowBox[{"e", " ", "k"}], "+", 
        RowBox[{"h", " ", "i", " ", "k"}], "-", 
        RowBox[{"j", " ", "k"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "a", " ", "b", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "c"}], " ", "d"}], "+", "e", "+", 
             RowBox[{"h", " ", "i"}], "-", "j"}], ")"}], " ", "k"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "a"}], " ", "b"}], "-", 
             RowBox[{"f", " ", "g"}], "+", 
             RowBox[{"c", " ", "d", " ", "k"}], "-", 
             RowBox[{"e", " ", "k"}], "-", 
             RowBox[{"h", " ", "i", " ", "k"}], "+", 
             RowBox[{"j", " ", "k"}]}], ")"}], "2"]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.860480186540992*^9, 3.860480949210331*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e793c9d4-0e3b-45ee-af71-2608d8cb956f"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.860480686412141*^9},ExpressionUUID->"35d2a936-c8cf-4306-9a7e-\
ea80a7196f0d"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8604802961352525`*^9},ExpressionUUID->"e3d8d176-4963-4f56-833e-\
a34dd1e40584"]
},
WindowSize->{759, 833},
WindowMargins->{{Automatic, 572}, {64, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (2019\:5e744\:67088\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 9465, 187, 66, "WolframAlphaShortInput",ExpressionUUID->"db897091-bc06-4c6b-ace2-ecea64c150ba"],
Cell[10048, 211, 647, 14, 45, "Message",ExpressionUUID->"2d820556-05e8-4b1c-a68c-12de325134f1"],
Cell[10698, 227, 496, 13, 56, "Output",ExpressionUUID->"b7cfc118-5bc0-4203-9190-2e73d67f3113"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11231, 245, 13472, 242, 151, "WolframAlphaShortInput",ExpressionUUID->"00a36ec5-9449-42b8-874b-6ddc329eef9d"],
Cell[24706, 489, 694, 15, 45, "Message",ExpressionUUID->"d5a22bfc-294c-44a0-a55e-8dc0156277f1"],
Cell[25403, 506, 531, 12, 24, "Message",ExpressionUUID->"b3e675aa-23e8-4717-92c0-96eb7eab6e88"],
Cell[25937, 520, 595, 13, 45, "Message",ExpressionUUID->"cf5cf359-917d-4c36-bae2-dc64ffa9be84"],
Cell[26535, 535, 416, 10, 24, "Message",ExpressionUUID->"35a7fa9e-d037-433f-97ec-00428add17e4"],
Cell[26954, 547, 2834, 80, 224, "Output",ExpressionUUID->"e793c9d4-0e3b-45ee-af71-2608d8cb956f"]
}, Open  ]],
Cell[29803, 630, 147, 3, 48, "Input",ExpressionUUID->"35d2a936-c8cf-4306-9a7e-ea80a7196f0d"],
Cell[29953, 635, 149, 3, 48, "Input",ExpressionUUID->"e3d8d176-4963-4f56-833e-a34dd1e40584"]
}
]
*)

(* End of internal cache information *)

